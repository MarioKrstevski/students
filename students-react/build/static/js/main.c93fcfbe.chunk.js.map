{"version":3,"sources":["components/StudentItem/StudentItem.js","components/StudentsList/StudentsList.js","components/EditStudentDetails/EditStudentDetails.js","components/NewStudent.js","repository/studentsReposotory.js","App.js","serviceWorker.js","index.js"],"names":["StudentItem","props","react_default","a","createElement","className","student","studentName","studentSurname","onClick","edit","index","delete","StudentsList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handlePageClick","data","selected","setState","pageNum","getStudentsPage","offset","nextPageOffset","students","map","components_StudentItem_StudentItem","key","filter","state","pageSize","pageCount","Math","ceil","length","dist_default","previousLabel","nextLabel","breakLabel","href","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Component","EditStudentDetails","newStudent","apply","onSubmit","formSubmitEvent","preventDefault","target","name","value","surname","program","nasoka","console","log","htmlFor","type","id","NewStudent","_this2","addStudent","add","listStudents","App","showEdit","toggleEdit","passedIndex","toEdit","deleteStudent","previous","splice","addStud","oldStudents","unshift","customHistory","createBrowserHistory","button","components_EditStudentDetails_EditStudentDetails","selectedStudent","Router","history","Route","exact","path","render","components_StudentsList_StudentsList","components_NewStudent","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c93fcfbe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst StudentItem = (props) => {\r\n\r\n    return (\r\n\r\n        <div className=\"row\">\r\n\r\n\r\n            <div className=\"col-md-3\">\r\n                {props.student.studentName}\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n                {props.student.studentSurname}\r\n            </div>\r\n            <div className=\"col-1\"> <button onClick={() => props.edit(props.index)}> <i className=\"fa fa-edit\"></i> </button> </div>\r\n\r\n            <div className=\"col-1\"> <button onClick={() => props.delete(props.index)}> <i className=\"fa fa-trash\"></i> </button> </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default StudentItem;","import React, { Component } from 'react';\r\nimport StudentItem from '../StudentItem/StudentItem';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\n\r\nclass StudentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            pageNum: 0,\r\n            pageSize: 3\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const offset = this.state.pageNum * this.state.pageSize;\r\n        const nextPageOffset = offset + this.state.pageSize;\r\n        const pageCount = Math.ceil(this.props.students.length / this.state.pageSize);\r\n\r\n        const students = this.getStudentsPage(offset, nextPageOffset);\r\n        return (\r\n            <div className=\"col-md-12\">\r\n                <div>\r\n                    {students}\r\n                </div>\r\n                <ReactPaginate previousLabel={\"previous\"}\r\n                    nextLabel={\"next\"}\r\n                    breakLabel={<a href=\"#\">...</a>}\r\n                    breakClassName={\"break-me\"}\r\n                    pageCount={pageCount}\r\n                    marginPagesDisplayed={2}\r\n                    pageRangeDisplayed={5}\r\n                    onPageChange={this.handlePageClick}\r\n                    containerClassName={\"pagination\"}\r\n                    subContainerClassName={\"pages pagination\"}\r\n                    activeClassName={\"active\"} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n    handlePageClick = (data) => {\r\n        let selected = data.selected;\r\n\r\n        // console.log('New selected: ', selected);\r\n        this.setState({ pageNum: selected });\r\n    };\r\n\r\n\r\n    getStudentsPage = (offset, nextPageOffset) => {\r\n        return this.props.students\r\n            .map((student, index) => {\r\n\r\n                return <StudentItem key={index} student={student} index={index}\r\n                    edit={this.props.edit} delete={this.props.delete}\r\n                />\r\n            })\r\n            // the filter is after the map function, so that the index attribute in map function is not reset for each page\r\n            .filter((student, index) => {\r\n                return index >= offset\r\n                    && index < nextPageOffset;\r\n            });\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\nexport default StudentsList;","import React, { Component } from 'react';\r\n\r\n\r\nclass EditStudentDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let newStudent;\r\n\r\n        const setStudent = (formSubmitEvent) => {\r\n            formSubmitEvent.preventDefault();\r\n\r\n            newStudent = {\r\n                studentName: formSubmitEvent.target.name.value,\r\n                studentSurname: formSubmitEvent.target.surname.value,\r\n                index: formSubmitEvent.target.index.value,\r\n                program: formSubmitEvent.target.nasoka.value\r\n            };\r\n\r\n            console.log(\"test\", newStudent);\r\n            onClick();\r\n        };\r\n\r\n        const onClick = () => { this.props.apply(newStudent) }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n\r\n                <form onSubmit={setStudent}>\r\n                    <div className=\"col-2\"><label htmlFor=\"name\">Name: </label><input type=\"text\" name=\"name\" id=\"name\" />\r\n                    </div>\r\n                    <div className=\"col-2\"><label htmlFor=\"surname\" >Surname: </label><input type=\"text\" name=\"surname\" id=\"surname\" /></div>\r\n                    <div className=\"col-2\"><label htmlFor=\"index\">Index: </label><input type=\"text\" name=\"index\" id=\"index\" /></div>\r\n                    <div className=\"col-2\"><label htmlFor=\"nasoka\">Nasoka: </label><input type=\"text\" name=\"nasoka\" id=\"nasoka\" /></div>\r\n\r\n                    <div className=\"col-1\"> <button type=\"submit\"> <i className=\"fa fa-paper-plane\"></i> </button> </div>\r\n                </form>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default EditStudentDetails;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewStudent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        let newStudent;\r\n\r\n        const addNewStudent = (formSubmitEvent) => {\r\n            formSubmitEvent.preventDefault();\r\n\r\n            newStudent = {\r\n                studentName: formSubmitEvent.target.name.value,\r\n                studentSurname: formSubmitEvent.target.surname.value,\r\n                index: formSubmitEvent.target.index.value,\r\n                program: formSubmitEvent.target.nasoka.value\r\n            };\r\n            console.log(\"nov student\", newStudent);\r\n            addStudent();\r\n        };\r\n\r\n        const addStudent = () => {\r\n            this.props.add(newStudent)\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <form onSubmit={addNewStudent}>\r\n                    <div className=\"col-2\"><label htmlFor=\"name\">Name: </label><input type=\"text\" name=\"name\" id=\"name\" />\r\n                    </div>\r\n                    <div className=\"col-2\"><label htmlFor=\"surname\" >Surname: </label><input type=\"text\" name=\"surname\" id=\"surname\" /></div>\r\n                    <div className=\"col-2\"><label htmlFor=\"index\">Index: </label><input type=\"text\" name=\"index\" id=\"index\" /></div>\r\n                    <div className=\"col-2\"><label htmlFor=\"nasoka\">Nasoka: </label><input type=\"text\" name=\"nasoka\" id=\"nasoka\" /></div>\r\n\r\n                    <div className=\"col-1\"> <button type=\"submit\"> <i className=\"fa fa-plus\"></i> </button> </div>\r\n                </form>\r\n\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewStudent;","\r\n\r\nexport const listStudents = () => {\r\n    return [\r\n        {\r\n            studentName: 'Mario',\r\n            studentSurname: 'Krstevski',\r\n            index: '152061',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Nenad',\r\n            studentSurname: 'Markovic',\r\n            index: '151002',\r\n            program: 'KNI'\r\n        },\r\n        {\r\n            studentName: 'Nadica',\r\n            studentSurname: 'Trajkovska',\r\n            index: '153020',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Simona',\r\n            studentSurname: 'Simonoska',\r\n            index: '153002',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Dejan',\r\n            studentSurname: 'Stojkov',\r\n            index: '153002',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Mario',\r\n            studentSurname: 'Krstevski',\r\n            index: '152061',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Nenad',\r\n            studentSurname: 'Markovic',\r\n            index: '151002',\r\n            program: 'KNI'\r\n        },\r\n        {\r\n            studentName: 'Nadica',\r\n            studentSurname: 'Trajkovska',\r\n            index: '153020',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Simona',\r\n            studentSurname: 'Simonoska',\r\n            index: '153002',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Dejan',\r\n            studentSurname: 'Stojkov',\r\n            index: '153002',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Mario',\r\n            studentSurname: 'Krstevski',\r\n            index: '152061',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Nenad',\r\n            studentSurname: 'Markovic',\r\n            index: '151002',\r\n            program: 'KNI'\r\n        },\r\n        {\r\n            studentName: 'Nadica',\r\n            studentSurname: 'Trajkovska',\r\n            index: '153020',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Simona',\r\n            studentSurname: 'Simonoska',\r\n            index: '153002',\r\n            program: 'PET'\r\n        },\r\n        {\r\n            studentName: 'Dejan',\r\n            studentSurname: 'Stojkov',\r\n            index: '153002',\r\n            program: 'PET'\r\n        }];\r\n};","import React, { Component } from 'react';\r\nimport createBrowserHistory from \"history/createBrowserHistory\";\r\nimport { Router, Route } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.css'\r\nimport StudentsList from \"./components/StudentsList/StudentsList\";\r\nimport EdiStudentDetails from \"./components/EditStudentDetails/EditStudentDetails\";\r\nimport NewStudent from \"./components/NewStudent\";\r\n\r\nimport './App.css';\r\nimport { listStudents } from \"./repository/studentsReposotory\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            students: listStudents(),\r\n            showEdit: false,\r\n            index: null\r\n        };\r\n\r\n        console.log(this.state.students);\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const toggleEdit = (passedIndex) => {\r\n            let toEdit = this.state.showEdit;\r\n            this.setState({ showEdit: !toEdit })\r\n            this.setState({ index: passedIndex });\r\n        }\r\n\r\n        const deleteStudent = (index) => {\r\n            let previous = this.state.students;\r\n            previous.splice(index, 1);\r\n\r\n            this.setState({ students: previous })\r\n\r\n\r\n        }\r\n\r\n        const addStud = (newStudent) => {\r\n            console.log(\"Jjas raboptam\");\r\n            const oldStudents = this.state.students;\r\n            console.log(\"OLD \", oldStudents);\r\n            oldStudents.unshift(newStudent);\r\n            console.log(\"NEW \", oldStudents);\r\n            this.setState({ students: oldStudents })\r\n            console.log(\" state students\", this.state.students);\r\n        }\r\n        const applyData = (newStudent) => {\r\n\r\n            const oldStudents = this.state.students;\r\n            oldStudents[this.state.index] = newStudent;\r\n\r\n            this.setState({ students: oldStudents })\r\n\r\n            this.setState({ showEdit: false })\r\n        }\r\n        const customHistory = createBrowserHistory()\r\n\r\n\r\n        let button = \"\";\r\n\r\n        if (this.state.showEdit) {\r\n            button = < EdiStudentDetails apply={applyData} selectedStudent={this.state.students[this.state.index]} />;\r\n        } else {\r\n\r\n        }\r\n        return (\r\n            <div>\r\n                Test extra text\r\n               <hr />\r\n                <Router history={customHistory} >\r\n                    <div>\r\n                        <Route exact={true} path='/' render={() => (\r\n                            <div className=\"container\">\r\n                                <h3>Laboratoriska 1</h3>\r\n\r\n                                {button}\r\n\r\n                                <div className=\"row\">\r\n\r\n                                    <StudentsList students={this.state.students} edit={toggleEdit} delete={deleteStudent} />\r\n\r\n                                </div>\r\n                            </div>\r\n                        )} />\r\n                        <Route exact={true} path='/insert' render={() => (\r\n                            <NewStudent add={addStud} />\r\n                        )} />\r\n                        <Route exact={true} path='/**' render={() => (\r\n                            <span>Error posto mopnika taka kazawwwwwww</span>\r\n                        )} />\r\n\r\n\r\n\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}